/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2022-02-17 06:50:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.work_005fkjy.community;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import kr.or.ddit.dcum.vo.MemberVO;
import kr.or.ddit.dcum.vo.CommuReplyVO;
import kr.or.ddit.dcum.vo.CommunityVO;
import java.util.List;

public final class communityView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("kr.or.ddit.dcum.vo.CommuReplyVO");
    _jspx_imports_classes.add("kr.or.ddit.dcum.vo.MemberVO");
    _jspx_imports_classes.add("kr.or.ddit.dcum.vo.CommunityVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("\r\n");
      out.write("<!-- 게시글 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css\">\r\n");
      out.write("<link rel=\"stylesheet\" href=\"");
      out.print(request.getContextPath());
      out.write("/css/cmu_board_view.css\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");

	CommunityVO commuVo = (CommunityVO)request.getAttribute("commuVo");
	List<CommuReplyVO> reCommuVo = (List<CommuReplyVO>)request.getAttribute("reCommuVo");
	MemberVO loginMember = (MemberVO)session.getAttribute("loginUser");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\t$(function(){\r\n");
      out.write("\t\t//글 목록으로 되돌아가기\r\n");
      out.write("\t\t$('#commuList').on('click', function(){\r\n");
      out.write("\t\t\tlocation.href=\"");
      out.print( request.getContextPath() );
      out.write("/community.do\";\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//글 삭제 모달창 띄우기\r\n");
      out.write("\t\t$('#deleteCommu').on('click', function(){\r\n");
      out.write("\t\t\t$('#deleteModal').modal('show');\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tbonum = $(this).parents().find('.cmu_num').val();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//모달창에 게시글 번호를 셋팅\r\n");
      out.write("\t\t\t$('.delhid').val(bonum);\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//모달창에서 삭제버튼\r\n");
      out.write("\t\t$('#del').on('click', function(){\r\n");
      out.write("\t\t\tform = $('#CommuForm').get(0);\r\n");
      out.write("\t\t\tform.action = \"");
      out.print( request.getContextPath() );
      out.write("/deleteCommunity.do\";\r\n");
      out.write("\t\t\tform.submit();\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//글 수정\r\n");
      out.write("\t\t$('#updateCommu').on('click', function(){\r\n");
      out.write("\t\t\tvar form = $('#CommuForm').get(0);\r\n");
      out.write("\t\t\tform.action = \"");
      out.print( request.getContextPath() );
      out.write("/updateCommunityForm.do\";\r\n");
      out.write("\t\t\tform.submit();\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//-------------------------------------------------------------------------\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//댓글 입력시 줄바꿈\r\n");
      out.write("\t\t$('#insertReply').on('click', function(){\r\n");
      out.write("\t\t\tvar str = $('#reply').val();\r\n");
      out.write("\t\t\tstr = str.replace(/(?:\\r\\n|\\r|\\n)/g, '<br/>');\r\n");
      out.write("\t\t\t$('#reply').val(str);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//댓글 삭제 모달창 띄우기\r\n");
      out.write("\t\t$('.deleteReCommu').on('click', function(){\r\n");
      out.write("\t\t\t$(\"#redeleteModal\").modal('show');\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\trenum = $(this).parent().find('.renum').val();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//모달창에 댓글 번호를 셋팅\r\n");
      out.write("\t\t\t$('.redelhid').val(renum);\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//모달에서 댓글 삭제\r\n");
      out.write("\t\t$('#redel').on('click', function(){\r\n");
      out.write("\t\t\tvar form = this.form;\r\n");
      out.write("\t\t\tform.action = \"");
      out.print( request.getContextPath() );
      out.write("/deleteReCommunity.do\"; \r\n");
      out.write("\t\t\tform.submit();\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//댓글 수정\r\n");
      out.write("\t\t$('.updateReCommu').on('click', function(){\r\n");
      out.write("\t\t\tif($(this).val() == \"수정\"){\r\n");
      out.write("\t\t\t\tcont = $(this).parents('tbody').find('.contre').html(); //br포함\r\n");
      out.write("\t\t\t\tcont = cont.replace(/<br>/g, \"\\n\");\r\n");
      out.write("\t\t\t\t//cont = cont.replace(/\\n/g, '<br>');\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tcont1 = '<textarea rows=\"4\" cols=\"147\" placeholder=\"내용 입력\" class=\"reply\" name=\"cmu_re_cont\">'+ cont + '</textarea>';\r\n");
      out.write("\t\t\t    $(this).parents('tbody').find('.contre').html(cont1);\r\n");
      out.write("\t\t\t    \r\n");
      out.write("\t\t\t    $(this).attr(\"value\", \"완료\");\r\n");
      out.write("\t\t\t    \r\n");
      out.write("\t\t\t    $('.deleteReCommu').hide();\r\n");
      out.write("\t\t\t    $('.cancel').show();\r\n");
      out.write("\t\t\t    \r\n");
      out.write("\t\t\t    //취소 버튼\r\n");
      out.write("\t\t\t    $('.cancel').on('click', function(){\r\n");
      out.write("\t\t\t    \tlocation.href=\"");
      out.print( request.getContextPath() );
      out.write("/communityView.do?cmu_num=");
      out.print( commuVo.getCmu_num() );
      out.write("\";\r\n");
      out.write("\t\t\t    })\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//수정 버튼\r\n");
      out.write("\t\t\t}else if($(this).val() == \"완료\"){\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tstr1 = $(this).parents('tr').find('.reply').val();\r\n");
      out.write("\t\t\t\tstr1 = str1.replace(/\\r/g, \"\").replace(/\\n/g, \"<br>\");\r\n");
      out.write("\t\t\t\t$(this).parents('tr').find('.contre').html(str1);\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar form = $('#reCommuForm').get(0);\r\n");
      out.write(" \t\t\t\tform.action = \"");
      out.print( request.getContextPath() );
      out.write("/updateReCommunity.do\";\r\n");
      out.write(" \t\t\t\tform.submit();\r\n");
      out.write("\t\t    }\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//새로 고침\r\n");
      out.write("\t\t$('#reReply').on('click', function(){\r\n");
      out.write("\t\t\tlocation.reload();\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t})\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<br>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t<h2>커뮤니티</h2>\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- 게시글 창 -->\r\n");
      out.write("\t<form id=\"CommuForm\">\r\n");
      out.write("\t\t<input type=\"hidden\" class=\"cmu_num\" name=\"cmu_num\" value=\"");
      out.print( commuVo.getCmu_num() );
      out.write("\">\r\n");
      out.write("\t\t<input type=\"hidden\" class=\"mem_id\" name=\"mem_id\" value=\"");
      out.print( loginMember.getMem_id() );
      out.write("\">\r\n");
      out.write("\t</form>\r\n");
      out.write("\t            \r\n");
      out.write("\t\t<table class=\"table\">\r\n");
      out.write("\t\t\t<thead>\r\n");
      out.write("\t\t\t\t<tr class=\"table-warning\">\r\n");
      out.write("\t\t\t\t\t<th colspan=\"3\" id=\"title\">[");
      out.print( commuVo.getCmu_sort() );
      out.write(']');
      out.write(' ');
      out.print( commuVo.getCmu_title() );
      out.write("</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</thead>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td id=\"writer\">작성자 : ");
      out.print( commuVo.getCmu_writer() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td></td>\r\n");
      out.write("\t\t\t\t\t<td id=\"date\">작성일자 : ");
      out.print( commuVo.getCmu_date() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t  \t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td id=\"cont\" colspan=\"3\">");
      out.print( commuVo.getCmu_cont() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"3\">\r\n");
      out.write("\t\t\t\t\t");
 if(loginMember != null && loginMember.getMem_id().equals(commuVo.getMem_id()) || loginMember.getMem_sort_nm().equals("교수")) { 
      out.write("\r\n");
      out.write("\t\t\t\t  \t\t<input type=\"button\" value=\"수정\" id=\"updateCommu\" class=\"btn btn-dark\">\r\n");
      out.write("\t\t\t\t  \t\t<input type=\"button\" value=\"삭제\" id=\"deleteCommu\" class=\"btn btn-dark\">\r\n");
      out.write("\t\t\t\t  \t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("  \t\t</table>\r\n");
      out.write("  \t<hr>\t\r\n");
      out.write("  \t</div>\r\n");
      out.write("  \t\t\r\n");
      out.write("\t<!-- 댓글 리스트 -->\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t<form id=\"reCommuForm\">\r\n");
      out.write("\t<table class=\"table\">\r\n");
      out.write("\t\t<thead>\r\n");
      out.write("\t\t\t<tr class=\"table-warning\">\r\n");
      out.write("\t\t\t\t<th colspan=\"4\">댓글</th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</thead>\r\n");
      out.write("\t\t");

			for(CommuReplyVO revo : reCommuVo){
		
      out.write("\r\n");
      out.write("\t\t<tbody>\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\t  \t\t<tr>\r\n");
      out.write("\t\t\t\t<td id=\"rewr\">");
      out.print( revo.getCmu_re_writer() );
      out.write("\r\n");
      out.write("\t\t\t\t\t<input type=\"hidden\" name=\"cmu_re_writer\" value=\"");
      out.print( revo.getCmu_re_writer() );
      out.write("\">\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t<td></td>\r\n");
      out.write("\t\t\t\t<td></td>\r\n");
      out.write("\t\t\t\t<td id=\"redate\">");
      out.print( revo.getCmu_re_date() );
      out.write("\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td colspan=\"3\" class=\"contre\">");
      out.print( revo.getCmu_re_cont() );
      out.write("\r\n");
      out.write("\t\t\t\t\t<input type=\"hidden\" name=\"cmu_re_cont\" value=\"");
      out.print( revo.getCmu_re_cont() );
      out.write("\">\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t<td class=\"rebut\">\r\n");
      out.write("\t\t\t\t");
 if(loginMember != null && loginMember.getMem_id().equals(revo.getMem_id()) || loginMember.getMem_sort_nm().equals("교수")) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t<input type=\"hidden\" value=\"");
      out.print( commuVo.getCmu_num() );
      out.write("\" name=\"cmu_num\" >\r\n");
      out.write("\t\t\t\t\t<input type=\"hidden\" value=\"");
      out.print( revo.getCmu_re_num() );
      out.write("\" name=\"cmu_re_num\" class=\"renum\">\r\n");
      out.write("\t\t\t\t\t<input type=\"hidden\" value=\"");
      out.print( revo.getCmu_re_writer() );
      out.write("\" name=\"cmu_re_writer\">\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<input type=\"button\" value=\"수정\" class=\"updateReCommu btn btn-dark\" >\r\n");
      out.write("\t\t\t\t\t<input type=\"button\" value=\"삭제\" class=\"deleteReCommu btn btn-dark\" >\r\n");
      out.write("\t\t\t\t\t<input type=\"button\" value=\"취소\" class=\"cancel\" style=\"display: none;\" class=\"btn btn-secondary\">\r\n");
      out.write("\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</tbody>\r\n");
      out.write("\t\t");
 
		}
		
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write(" \t\t</table>\r\n");
      out.write(" \t\t</form>\r\n");
      out.write(" \t\t<hr>\r\n");
      out.write(" \t\t<!-- 댓글 입력창 -->\r\n");
      out.write(" \t\t<form action=\"");
      out.print(request.getContextPath());
      out.write("/insertReCommunity.do\" mothod=\"post\">\r\n");
      out.write("\t  \t\t<textarea rows=\"4\" cols=\"147\" placeholder=\"내용 입력\" id=\"reply\" name=\"cmu_re_cont\"></textarea>\r\n");
      out.write("\t\t\t<input type=\"hidden\" id=\"rewriter\" name=\"cmu_re_writer\" value=\"");
      out.print( loginMember.getMem_name() );
      out.write("\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"cmu_num\" value=\"");
      out.print( commuVo.getCmu_num() );
      out.write("\">\r\n");
      out.write("\t\t\t<input type=\"hidden\" name=\"mem_id\" value=\"");
      out.print( loginMember.getMem_id() );
      out.write("\">\r\n");
      out.write("\t\t\t<br>\r\n");
      out.write("\t\t\t<input type=\"submit\" value=\"입력\" id=\"insertReply\" class=\"btn btn-secondary\">\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t<br><br>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- 목록 -->\r\n");
      out.write("\t\t<button type=\"button\" id=\"commuList\" class=\"btn\">\r\n");
      out.write("\t\t\t<img src=\"");
      out.print(request.getContextPath());
      out.write("/images/icon/목록아이콘.PNG\">\r\n");
      out.write("\t\t</button>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- 게시글 삭제창 -->\r\n");
      out.write("\t<div class=\"modal fade\" id=\"deleteModal\">\r\n");
      out.write("\t\t<div class=\"modal-dialog modal-dialog-centered\">\r\n");
      out.write("\t\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\t<!-- Modal Header -->\r\n");
      out.write("\t\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<!-- Modal body -->\r\n");
      out.write("\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t\t<form id=\"wrform\">\r\n");
      out.write("\t\t\t\t\t\t<label>정말 삭제하시겠습니까?</label>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" name=\"del\" class=\"delhid\">\r\n");
      out.write("\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<!-- Modal footer -->\r\n");
      out.write("\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" id=\"del\">삭제</button>\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" data-dismiss=\"modal\">취소</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- 댓글 삭제창 -->\r\n");
      out.write("\t<div class=\"modal fade\" id=\"redeleteModal\">\r\n");
      out.write("\t\t<div class=\"modal-dialog modal-dialog-centered\">\r\n");
      out.write("\t\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\t<form id=\"wrform\">\r\n");
      out.write("\t\t\t\t\t<!-- Modal Header -->\r\n");
      out.write("\t\t\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<!-- Modal body -->\r\n");
      out.write("\t\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t\t\t\t<label>정말 삭제하시겠습니까?</label>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" name=\"cmu_num\" value=\"");
      out.print(commuVo.getCmu_num() );
      out.write("\" >\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"hidden\" name=\"cmu_re_num\" class=\"redelhid\">\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<!-- Modal footer -->\r\n");
      out.write("\t\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" id=\"redel\">삭제</button>\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\" class=\"btn btn-dark\" data-dismiss=\"modal\">취소</button>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
