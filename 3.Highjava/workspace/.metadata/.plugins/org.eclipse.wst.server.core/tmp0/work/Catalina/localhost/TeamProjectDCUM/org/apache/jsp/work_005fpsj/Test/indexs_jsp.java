/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2022-02-17 12:37:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.work_005fpsj.Test;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import kr.or.ddit.dcum.vo.MemberVO;

public final class indexs_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("kr.or.ddit.dcum.vo.MemberVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css\">\r\n");
      out.write("  <script src=\"https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js\"></script>\r\n");
      out.write("  <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>\r\n");
      out.write("  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/js/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("#right, #left{\r\n");
      out.write("\tdisplay: inline-block;\r\n");
      out.write("\tborder : 1px solid black;\r\n");
      out.write("\twidth : 50%;\r\n");
      out.write("\tfloat : left;\r\n");
      out.write("\theight : 720px;\r\n");
      out.write("}\r\n");
      out.write("#left, #right{\r\n");
      out.write("\toverflow: auto;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#answerpaper td{\r\n");
      out.write("\theight : 60px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#atd {\r\n");
      out.write("\twidth : 80px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("#q td {\r\n");
      out.write("\theight : 150px;\t\r\n");
      out.write("}\r\n");
      out.write("#tt {\r\n");
      out.write("\theight : 60px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("<script>\r\n");
      out.write("\t$(function(){\r\n");
      out.write("\t\t$(\"#bbbv\").on(\"click\" , function(){\r\n");
      out.write("\t\t\talert(");
      out.print(request.getAttribute("score"));
      out.write(");\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// 학생이 보는 시험 페이지\r\n");
      out.write("\t\t\turl : \"");
      out.print(request.getContextPath());
      out.write("/MyTest.do\",\r\n");
      out.write("\t\t\tmethod : \"post\",\r\n");
      out.write("\t\t\tsuccess : function(res){\r\n");
      out.write("\t\t\t\tcode = \"\";\r\n");
      out.write("\t\t\t\t$.each(res, function(i, v){\r\n");
      out.write("\t\t\t\t\tcode += \"<tr><td>\" + v.sub_name + \"</td>\";\r\n");
      out.write("\t\t\t\t\tcode += \"<td>\" + v.test_name + \"</td>\";\r\n");
      out.write("\t\t\t\t\tcode += \"<td>\" + v.score + \"</td>\";\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tif(v.score == \"N\"){\r\n");
      out.write("\t\t\t\t\t\tcode += \"<td><input type='button' value='문제풀기' class='btn btn-danger gotest' data-toggle='modal' data-target='#myModal' data='\" + v.test_name + \"'></td></tr>\";\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t})\r\n");
      out.write("\t\t\t\t$(\"#restab\").empty().append(code);\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror : function(xhr){\r\n");
      out.write("\t\t\t\talert(\"상태 : \" + xhr.status)\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tdataType : \"json\"\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$(\"#restab\").on(\"click\" , \".gotest\", function(){\r\n");
      out.write("\t\t\ttestname = $(this).attr(\"data\");\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl : \"");
      out.print(request.getContextPath());
      out.write("/MyTestDetail.do\",\r\n");
      out.write("\t\t\t\tdata : {\r\n");
      out.write("\t\t\t\t\t\"testname\" : testname\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tmethod : \"post\",\r\n");
      out.write("\t\t\t\tsuccess : function(res){\r\n");
      out.write("\t\t\t\t\tcode2 = \"\";\r\n");
      out.write("\t\t\t\t\t$.each(res, function(i, v){\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tcode2 += \"<tr id='tt'><th>\" + v.sub_name + \"</th><th>\" + v.test_name + \"</th></tr>\"\r\n");
      out.write("\t\t\t\t\tcode2 += \"<tr><td id='qtd'>문제1</td><td>\" + v.q1 + \"</td></tr>\"\r\n");
      out.write("\t\t\t\t\tcode2 += \"<tr><td>문제2</td><td>\" + v.q2 + \"</td></tr>\"\r\n");
      out.write("\t\t\t\t\tcode2 += \"<tr><td>문제3</td><td>\" + v.q3 + \"</td></tr>\"\r\n");
      out.write("\t\t\t\t\tcode2 += \"<tr><td>문제4</td><td>\" + v.q4 + \"</td></tr>\"\r\n");
      out.write("\t\t\t\t\tcode2 += \"<tr><td>문제5</td><td>\" + v.q5 + \"</td></tr>\"\r\n");
      out.write("\t\t\t\t\tcode2 += \"<tr><td>문제6</td><td>\" + v.q6 + \"</td></tr>\"\r\n");
      out.write("\t\t\t\t\tcode2 += \"<tr><td>문제7</td><td>\" + v.q7 + \"</td></tr>\"\r\n");
      out.write("\t\t\t\t\tcode2 += \"<tr><td>문제8</td><td>\" + v.q8 + \"</td></tr>\"\r\n");
      out.write("\t\t\t\t\tcode2 += \"<tr><td>문제9</td><td>\" + v.q9 + \"</td></tr>\"\r\n");
      out.write("\t\t\t\t\tcode2 += \"<tr><td>문제10</td><td>\" + v.q10 + \"</td></tr>\"\r\n");
      out.write("\t\t\t\t\t$(\"#han2\").val(v.test_name);\r\n");
      out.write("\t\t\t\t\t$(\"#han\").val(v.answer);\r\n");
      out.write("\t\t\t\t\t})\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t$(\"#q\").empty().append(code2);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\tcode3 = \"\";\r\n");
      out.write("\t\t\t\t\tcode3 += \"<tr><th>답안지</th>\"\r\n");
      out.write("\t\t\t\t\tcode3 += \"<tr><td id='atd'>문제1</td><td>1<input type='checkbox' value='1' name='qa'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2<input type='checkbox' value='2' name='qa'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3<input type='checkbox' value='3' name='qa'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4<input type='checkbox' value='4' name='qa'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5<input type='checkbox' value='5' name='qa'></td>\"\r\n");
      out.write("\t\t\t\t\tcode3 += \"<tr><td>문제2</td><td>1<input type='checkbox' value='1' name='qa2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2<input type='checkbox' value='2' name='qa2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3<input type='checkbox' value='3' name='qa2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4<input type='checkbox' value='4' name='qa2'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5<input type='checkbox' value='5' name='qa2'></td>\"\r\n");
      out.write("\t\t\t\t\tcode3 += \"<tr><td>문제3</td><td>1<input type='checkbox' value='1' name='qa3'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2<input type='checkbox' value='2' name='qa3'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3<input type='checkbox' value='3' name='qa3'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4<input type='checkbox' value='4' name='qa3'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5<input type='checkbox' value='5' name='qa3'></td>\"\r\n");
      out.write("\t\t\t\t\tcode3 += \"<tr><td>문제4</td><td>1<input type='checkbox' value='1' name='qa4'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2<input type='checkbox' value='2' name='qa4'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3<input type='checkbox' value='3' name='qa4'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4<input type='checkbox' value='4' name='qa4'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5<input type='checkbox' value='5' name='qa4'></td>\"\r\n");
      out.write("\t\t\t\t\tcode3 += \"<tr><td>문제5</td><td>1<input type='checkbox' value='1' name='qa5'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2<input type='checkbox' value='2' name='qa5'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3<input type='checkbox' value='3' name='qa5'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4<input type='checkbox' value='4' name='qa5'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5<input type='checkbox' value='5' name='qa5'></td>\"\r\n");
      out.write("\t\t\t\t\tcode3 += \"<tr><td>문제6</td><td>1<input type='checkbox' value='1' name='qa6'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2<input type='checkbox' value='2' name='qa6'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3<input type='checkbox' value='3' name='qa6'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4<input type='checkbox' value='4' name='qa6'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5<input type='checkbox' value='5' name='qa6'></td>\"\r\n");
      out.write("\t\t\t\t\tcode3 += \"<tr><td>문제7</td><td>1<input type='checkbox' value='1' name='qa7'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2<input type='checkbox' value='2' name='qa7'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3<input type='checkbox' value='3' name='qa7'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4<input type='checkbox' value='4' name='qa7'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5<input type='checkbox' value='5' name='qa7'></td>\"\r\n");
      out.write("\t\t\t\t\tcode3 += \"<tr><td>문제8</td><td>1<input type='checkbox' value='1' name='qa8'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2<input type='checkbox' value='2' name='qa8'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3<input type='checkbox' value='3' name='qa8'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4<input type='checkbox' value='4' name='qa8'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5<input type='checkbox' value='5' name='qa8'></td>\"\r\n");
      out.write("\t\t\t\t\tcode3 += \"<tr><td>문제9</td><td>1<input type='checkbox' value='1' name='qa9'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2<input type='checkbox' value='2' name='qa9'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3<input type='checkbox' value='3' name='qa9'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4<input type='checkbox' value='4' name='qa9'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5<input type='checkbox' value='5' name='qa9'></td>\"\r\n");
      out.write("\t\t\t\t\tcode3 += \"<tr><td>문제10</td><td>1<input type='checkbox' value='1' name='qa10'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2<input type='checkbox' value='2' name='qa10'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;3<input type='checkbox' value='3' name='qa10'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4<input type='checkbox' value='4' name='qa10'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5<input type='checkbox' value='5' name='qa10'></td>\"\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t$(\"#answerpaper\").empty().append(code3);\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror : function(xhr){\r\n");
      out.write("\t\t\t\t\talert(\"상태 : \" + xhr.status)\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tdataType : \"json\"\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t})\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<h2><img src='");
      out.print(request.getContextPath());
      out.write("/images/icon/ll.png'>진행중인 시험</h2>\r\n");
      out.write("\t<hr>\r\n");
      out.write("\t<div id=\"d1\">\r\n");
      out.write("\t\t<table border=\"1\" class=\"table table-light\" id=\"restab\">\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t</table>\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\r\n");
      out.write("<!-- The Modal -->\r\n");
      out.write("<div class=\"modal \" id=\"myModal\">\r\n");
      out.write("  <div class=\"modal-dialog modal-lg\">\r\n");
      out.write("    <div class=\"modal-content\">\r\n");
      out.write("\r\n");
      out.write("      <!-- Modal Header -->\r\n");
      out.write("      <div class=\"modal-header\">\r\n");
      out.write("        <h4 class=\"modal-title\">Modal Heading</h4>\r\n");
      out.write("        <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <!-- Modal body -->\r\n");
      out.write("       <form action=\"");
      out.print(request.getContextPath());
      out.write("/TestChk.do\" method=\"post\">\r\n");
      out.write("      <div class=\"modal-body\">\r\n");
      out.write("        <div id=\"right\">\r\n");
      out.write("        \t<h3>문제지</h3>\r\n");
      out.write("        \t<table border='1' id='q' class='table table-light'>\r\n");
      out.write("        \t\r\n");
      out.write("        \t</table>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("       \r\n");
      out.write("        <div id=\"left\">\r\n");
      out.write("        \t<h3>답안지</h3>\r\n");
      out.write("        \t<table border='1' id='answerpaper' class='table table-light'>\r\n");
      out.write("        \t\r\n");
      out.write("        \t</table>\r\n");
      out.write("        \t<input type='text' hidden name='answer' id='han'>\r\n");
      out.write("        \t<input type='text' hidden name='testname' id='han2'>\r\n");
      out.write("        </div>\r\n");
      out.write("       \r\n");
      out.write("      </div>\r\n");
      out.write("\r\n");
      out.write("      <!-- Modal footer -->\r\n");
      out.write("      <div class=\"modal-footer\">\r\n");
      out.write("        <input type=\"submit\" class=\"btn btn-danger\" value='제출' id=\"bbbv\">\r\n");
      out.write("        <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</button>\r\n");
      out.write("      </div>\r\n");
      out.write("       </form>\r\n");
      out.write("\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
