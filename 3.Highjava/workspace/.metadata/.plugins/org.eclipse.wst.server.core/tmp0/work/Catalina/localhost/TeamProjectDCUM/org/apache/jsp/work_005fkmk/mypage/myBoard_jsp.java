/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2022-02-17 00:15:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.work_005fkmk.mypage;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import kr.or.ddit.dcum.vo.CommunityVO;
import java.util.List;
import kr.or.ddit.dcum.vo.MemberVO;

public final class myBoard_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("kr.or.ddit.dcum.vo.MemberVO");
    _jspx_imports_classes.add("kr.or.ddit.dcum.vo.CommunityVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n");
      out.write("<!-- jquery -->\r\n");
      out.write("<link rel=\"stylesheet\"\thref=\"");
      out.print(request.getContextPath());
      out.write("/css/updateInfo.css\">\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/js/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<!-- 외부소스 -->\r\n");
      out.write("<link rel=\"stylesheet\"\thref=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css\">\r\n");
      out.write("<script\tsrc=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>\r\n");
      out.write("<script\tsrc=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("</head>\r\n");

MemberVO loginMember = (MemberVO)session.getAttribute("loginUser");
List<CommunityVO> boardList = (List<CommunityVO>)request.getAttribute("boardList");

      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("#selectBox {\r\n");
      out.write("\tfloat: right;\r\n");
      out.write("\twidth: 100px;\r\n");
      out.write("}\r\n");
      out.write(".sort-body {\r\n");
      out.write("\tfont-weight: bold;\r\n");
      out.write("\tcolor: #2f561f;\r\n");
      out.write("}\r\n");
      out.write(".sort{\r\n");
      out.write("\twidth: 50px;\r\n");
      out.write("}\r\n");
      out.write(".date{\r\n");
      out.write("\twidth: 100px;\r\n");
      out.write("}\r\n");
      out.write(".cont-aTag{\r\n");
      out.write("\tcolor :black;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("<body>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<h3>게시물관리</h3>\r\n");
      out.write("\t\t<p>\r\n");
      out.write("\t\t\t<span id=\"p1\">내가 쓴 글 내역입니다.</span>\r\n");
      out.write("\t\t\t<select id=\"selectBox\" name=\"cmu_sort\">\r\n");
      out.write("\t\t\t\t<option value=\"전체\" selected=\"selected\">전체</option>\r\n");
      out.write("\t\t\t\t<option value=\"질의응답\">질의응답</option>\r\n");
      out.write("\t\t\t\t<option value=\"비교과\">비교과</option>\r\n");
      out.write("\t\t\t\t<option value=\"물물교환\">물물교환</option>\r\n");
      out.write("\t\t\t</select>\r\n");
      out.write("\t\t</p>\r\n");
      out.write("\t\t<hr>\r\n");
      out.write("\t\t<caption>[ 커뮤니티 ]</caption>\r\n");
      out.write("\t\t<table class=\"table dark-table\">\r\n");
      out.write("\t\t\t<thead class=\"thead-dark\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th class=\"sort\">말머리</th>\r\n");
      out.write("\t\t\t\t\t<th class=\"cont\">제목</th>\r\n");
      out.write("\t\t\t\t\t<th class=\"date\">작성날짜</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</thead>\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t");

					if (boardList == null) {
				
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"3\">\r\n");
      out.write("\t\t\t\t\t\t<p style=\"text-align: center;\">내가쓴 게시물이 없습니다.</p>\r\n");
      out.write("\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");

					} else {
						for (CommunityVO b : boardList) {
				
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td class=\"room\" class=\"sort-body\">[ ");
      out.print(b.getCmu_sort());
      out.write(" ]</td>\r\n");
      out.write("\t\t\t\t\t<td class=\"room\">\r\n");
      out.write("\t\t\t\t\t\t<a class=\"cont-aTag\" \r\n");
      out.write("\t\t\t\t\t\t href=\"");
      out.print(request.getContextPath());
      out.write("/communityView.do?cmu_num=");
      out.print( b.getCmu_num() );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t ");
      out.print(b.getCmu_title());
      out.write("</a>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t<td class=\"room\">");
      out.print(b.getCmu_date());
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");

						}
					}
				
      out.write("\r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("\t\t</table>\r\n");
      out.write("\t\t<hr>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
