/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2022-02-17 11:25:29 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.work_005fpsj.homework;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("  <link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css\">\r\n");
      out.write("  <script src=\"https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js\"></script>\r\n");
      out.write("  <script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>\r\n");
      out.write("  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/js/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("\t");
 int temp = 0;
      out.write("\r\n");
      out.write("\t$(function(){\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// 내가 해야할 모든 과제를 불러오는 부분\r\n");
      out.write("\t\t\turl : \"");
      out.print(request.getContextPath());
      out.write("/selectAllMyTask.do\",\r\n");
      out.write("\t\t\tmethod : \"get\",\r\n");
      out.write("\t\t\tsuccess : function(res){\r\n");
      out.write("\t\t\t\tcode = \"<tr><th>과목명</th><th>과제명</th> <th>과제기한</th> <th>제출여부</th> <th></th> </tr>\"\r\n");
      out.write("\t\t\t\t$.each(res, function(i, v){\r\n");
      out.write("\t\t\t\t\tcode += \"<tr><td>\" + v.sub_name + \"</td>\"\r\n");
      out.write("\t\t\t\t\tcode += \"<td>\" + v.task_name + \"</td>\"\r\n");
      out.write("\t\t\t\t\tcode += \"<td>\" + v.task_date + \"</td>\"\r\n");
      out.write("\t\t\t\t\tcode += \"<td>\" + v.task_chk + \"</td>\"\r\n");
      out.write("\t\t\t\t\tcode += \"<td><input type='button' value='제출' data-toggle='modal' data='\" + v.task_name + \"' data-target='#myModal' class='btn2 btn btn-primary'></td></tr>\"\r\n");
      out.write("\t\t\t\t})\r\n");
      out.write("\t\t\t\t$(\"#tb1\").append(code);\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror : function(xhr){\r\n");
      out.write("\t\t\t\talert(\"상태 : \" + xhr.status)\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tdataType : \"json\"\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 내가 제출했었던 과제를 불러오는 부분\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl : \"");
      out.print(request.getContextPath());
      out.write("/selectOldMyTask.do\",\r\n");
      out.write("\t\t\tmethod : \"post\",\r\n");
      out.write("\t\t\tsuccess : function(res){\r\n");
      out.write("\t\t\t\tcodes = \"<tr><th>과목명</th><th>과제명</th> <th>과제기한</th> <th>제출여부</th> <th></th> </tr>\"\r\n");
      out.write("\t\t\t\t\t$.each(res, function(i, v){\r\n");
      out.write("\t\t\t\t\t\tcodes += \"<tr><td>\" + v.sub_name + \"</td>\"\r\n");
      out.write("\t\t\t\t\t\tcodes += \"<td>\" + v.task_name + \"</td>\"\r\n");
      out.write("\t\t\t\t\t\tcodes += \"<td>\" + v.task_date + \"</td>\"\r\n");
      out.write("\t\t\t\t\t\tcodes += \"<td>\" + v.task_chk + \"</td>\"\r\n");
      out.write("\t\t\t\t\t\tcodes += \"<td><input type='button' value='상세보기' data-toggle='modal' data='\" + v.task_name + \"' data-target='#myModal' class='btn4 btn btn-primary'></td></tr>\"\r\n");
      out.write("\t\t\t\t\t})\r\n");
      out.write("\t\t\t\t\t$(\"#tb2\").append(codes);\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror : function(xhr){\r\n");
      out.write("\t\t\t\talert(\"상태 : \" + xhr.status)\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tdataType : \"json\"\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 제출했었던 과제의 상세보기 버튼 이벤트\r\n");
      out.write("\t\t$(\"#tb2\").on(\"click\", \".btn4\", function(){\r\n");
      out.write("\t\t\tsubname = $(this).attr(\"data\");\r\n");
      out.write("\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\turl : \"");
      out.print(request.getContextPath());
      out.write("/selectOldMyTask.do\",\r\n");
      out.write("\t\t\t\tmethod : \"post\",\r\n");
      out.write("\t\t\t\tsuccess : function(res){\r\n");
      out.write("\t\t\t\t\tcodes2 = \"<tr><th>과목명</th><th>과제명</th> <th>과제기한</th> <th>제출여부</th> <th></th> </tr>\"\r\n");
      out.write("\t\t\t\t\t\t$.each(res, function(i, v){\r\n");
      out.write("\t\t\t\t\t\t\tcodes2 += \"<tr><td>\" + v.sub_name + \"</td>\"\r\n");
      out.write("\t\t\t\t\t\t\tcodes2 += \"<td>\" + v.task_name + \"</td>\"\r\n");
      out.write("\t\t\t\t\t\t\tcodes2 += \"<td>\" + v.task_date + \"</td>\"\r\n");
      out.write("\t\t\t\t\t\t\tcodes2 += \"<td>\" + v.task_chk + \"</td>\"\r\n");
      out.write("\t\t\t\t\t\t\tcodes2 += \"<td></td></tr>\"\r\n");
      out.write("\t\t\t\t\t\t\t\tcodes2 += \"<tr><td>\" + v.task_title + \"</td>\"\r\n");
      out.write("\t\t\t\t\t\t\t\tcodes2 += \"<td>\" + v.task_comt + \"</td>\"\r\n");
      out.write("\t\t\t\t\t\t\t\tcodes2 += \"<td>\" + v.path + \"</td>\"\r\n");
      out.write("\t\t\t\t\t\t\t\tcodes2 += \"<td></td>\"\r\n");
      out.write("\t\t\t\t\t\t\t\tcodes2 += \"<td></td></tr>\"\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t})\r\n");
      out.write("\t\t\t\t\t\t$(\"#tb33\").html(codes2);\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\terror : function(xhr){\r\n");
      out.write("\t\t\t\t\talert(\"상태 : \" + xhr.status)\r\n");
      out.write("\t\t\t\t},\r\n");
      out.write("\t\t\t\tdataType : \"json\"\r\n");
      out.write("\t\t\t})\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 제출버튼 클릭 이벤트\r\n");
      out.write("\t\t$(\"#tb1\").on(\"click\", \".btn2\", function(){\r\n");
      out.write("\t\t\tsubname = $(this).attr(\"data\")\r\n");
      out.write("\t\t\tcodess = \"<tr><td>제목></td><td><input type='text' name='title'></td></tr><td>내용</td><td><textarea cols='' rows='' name='cont'></textarea></td></tr><tr><td>첨부파일</td><td><input type='file' name='file'></td><td hidden='hidden' id='htd'><input type='text' name='subname' id='hin'></td></tr>\";\r\n");
      out.write("\t\t\t$(\"#tb33\").html(codess);\r\n");
      out.write("\t\t\t$(\"#hin\").attr(\"value\", subname);\r\n");
      out.write("\t\t})\r\n");
      out.write("\t})\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<h2>나의 과제</h2>\r\n");
      out.write("\t<table id=\"tb1\" class=\"table table-light\" border=\"1\">\r\n");
      out.write("\r\n");
      out.write("    </table>\r\n");
      out.write("    \r\n");
      out.write("    <hr>\r\n");
      out.write("    \r\n");
      out.write("    <h2>점수 및 제출 현황</h2>\r\n");
      out.write("    <table id=\"tb2\" class=\"table table-light\" border=\"1\">\r\n");
      out.write("    \r\n");
      out.write("    </table>\r\n");
      out.write("\r\n");
      out.write("  <!-- The Modal -->\r\n");
      out.write("  <div class=\"modal\" id=\"myModal\">\r\n");
      out.write("    <div class=\"modal-dialog\">\r\n");
      out.write("      <div class=\"modal-content\">\r\n");
      out.write("      \r\n");
      out.write("        <!-- Modal Header -->\r\n");
      out.write("        <div class=\"modal-header\">\r\n");
      out.write("          <h4 class=\"modal-title\">Modal Heading</h4>\r\n");
      out.write("          <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <!-- Modal body -->        \t\r\n");
      out.write("        <form action=\"");
      out.print(request.getContextPath());
      out.write("/insertTask.do\" method=\"get\">\r\n");
      out.write("        <div class=\"modal-body\">\r\n");
      out.write("        \t<table class=\"table table-light\" id=\"tb33\">\r\n");
      out.write("        \t\t<tr>\r\n");
      out.write("        \t\t\t<td>제목</td>\r\n");
      out.write("        \t\t\t<td><input type=\"text\" name=\"title\"></td>\r\n");
      out.write("        \t\t</tr>\r\n");
      out.write("        \t\t<tr>\r\n");
      out.write("        \t\t\t<td>내용</td>\r\n");
      out.write("        \t\t\t<td><textarea cols=\"\" rows=\"\" name=\"cont\"></textarea></td>\r\n");
      out.write("        \t\t</tr>\r\n");
      out.write("        \t\t<tr>\r\n");
      out.write("        \t\t\t<td>첨부파일</td>\r\n");
      out.write("        \t\t\t<td><input type=\"file\" name=\"file\"></td>\r\n");
      out.write("        \t\t\t<td hidden=\"hidden\" id=\"htd\"><input type=\"text\" name=\"subname\" id=\"hin\"></td>\r\n");
      out.write("        \t\t</tr>\r\n");
      out.write("        \t</table >\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        \t\r\n");
      out.write("        \t\t\r\n");
      out.write("        \r\n");
      out.write("        \t\r\n");
      out.write("        \t\r\n");
      out.write("        </div>\r\n");
      out.write("        \r\n");
      out.write("        <!-- Modal footer -->\r\n");
      out.write("        <div class=\"modal-footer\">\r\n");
      out.write("          <input type=\"submit\" class=\"btn btn-danger\" value=\"제출\">\r\n");
      out.write("         \r\n");
      out.write("          <button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">닫기</button>\r\n");
      out.write("        </div>\r\n");
      out.write("        </form>\r\n");
      out.write("        \r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("  \r\n");
      out.write("\r\n");
      out.write("    \r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
