/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2022-02-17 06:57:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.work_005fkjy.study;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import kr.or.ddit.dcum.vo.MemberVO;
import kr.or.ddit.dcum.vo.StudyApplyVO;
import java.util.List;
import kr.or.ddit.dcum.vo.StudyVO;

public final class studyView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("kr.or.ddit.dcum.vo.StudyApplyVO");
    _jspx_imports_classes.add("kr.or.ddit.dcum.vo.StudyVO");
    _jspx_imports_classes.add("kr.or.ddit.dcum.vo.MemberVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("\r\n");
      out.write("<!-- 게시글 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<style>\r\n");
      out.write("\t#date{\r\n");
      out.write("\t\ttext-align: right;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#bambooList{\r\n");
      out.write("\t\tmargin : 5px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#updateStudy{\r\n");
      out.write("\t\tfloat : right;\r\n");
      out.write("\t\tmargin : 5px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#deleteStudy{\r\n");
      out.write("\t\tfloat : right;\r\n");
      out.write("\t\tmargin : 5px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#del{\r\n");
      out.write("\t\ttext-align : left;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#apply{\r\n");
      out.write("\t\tdisplay : show;\r\n");
      out.write("\t}\r\n");
      out.write("\t#but-icon{\r\n");
      out.write("\t\twidth: 21px;\r\n");
      out.write("\t\theight: 18px;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\r\n");

	StudyVO svo = (StudyVO)request.getAttribute("studyVo");
	List<StudyApplyVO> studentVo = (List<StudyApplyVO>)request.getAttribute("studentVo");
	MemberVO loginMember = (MemberVO)session.getAttribute("loginUser");

      out.write("\r\n");
      out.write("\r\n");
      out.write("\t$(function(){\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//스터디 목록\r\n");
      out.write("\t\t$('#studyList').on('click', function(){\r\n");
      out.write("\t\t\tlocation.href=\"");
      out.print( request.getContextPath() );
      out.write("/study.do\";\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//뷰에서 스터디 삭제\r\n");
      out.write("\t\t$('#deleteStudy').on('click', function(){\r\n");
      out.write("\t\t\t$('#deleteModal').modal('show');\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//뷰에서 삭제 버튼\r\n");
      out.write("\t\t$('#del').on('click', function(){\r\n");
      out.write("\t\t\tvar form = $('#studyForm').get(0);\r\n");
      out.write("\t\t\tform.action = \"");
      out.print( request.getContextPath() );
      out.write("/deleteStudy.do\";\r\n");
      out.write("\t\t\tform.submit();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$('#deleteModal').modal('hide');\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//스터디 수정\r\n");
      out.write("\t\t$('#updateStudy').on('click', function(){\r\n");
      out.write("\t\t\tvar form = $('#studyForm').get(0);\r\n");
      out.write("\t\t\tform.action = \"");
      out.print( request.getContextPath() );
      out.write("/updateStudyForm.do\";\r\n");
      out.write("\t\t\tform.submit();\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//뷰에서 스터디 신청\r\n");
      out.write("\t\t$('#apply').on('click', function(){\r\n");
      out.write("\r\n");
      out.write("\t\t\t$('#insertModal').modal('show');\r\n");
      out.write("\r\n");
      out.write("\t\t\tsbnum = '");
      out.print( svo.getSb_num() );
      out.write("';\r\n");
      out.write("\t\t\t$('.hiddensb').val(sbnum);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//스터디 신청시 인원이 다 차면 신청 버튼 사라짐\r\n");
      out.write("\t\tvar total = '");
      out.print( svo.getTotal_cnt() );
      out.write("';\r\n");
      out.write("\t\tvar current = '");
      out.print( svo.getCurrent_cnt() );
      out.write("';\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tif( total == current ) $('#apply').attr('style', \"display:none;\");\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//모달창에서 신청 버튼\r\n");
      out.write("\t\t$('#wrform').on('submit', function(){\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(this).attr('action', \"");
      out.print( request.getContextPath() );
      out.write("/insertApply.do\");\r\n");
      out.write("\t\t\t$(this).attr('method', 'post');\r\n");
      out.write("\t\t\t$(this).submit();\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t");
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//뷰에서 스터디 취소\r\n");
      out.write("\t\t$('.cancelApply').on('click', function(){\r\n");
      out.write("\t\t\t$('#cancelModal').modal('show');\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tsbid = $(this).parent().parent().find('.dep').attr(\"value\");\r\n");
      out.write("\t\t\t$('.hiddenid').val(sbid);\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t//모달창에서 예약취소 버튼\r\n");
      out.write("\t\t$('#cancelStudy').on('click', function(){\r\n");
      out.write("\t\t\tvar form = this.form;\r\n");
      out.write("\t\t\tform.action = \"");
      out.print( request.getContextPath() );
      out.write("/deleteApply.do\";\r\n");
      out.write("\t\t\tform.submit();\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t})\r\n");
      out.write("\t\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t<h2>스터디모집</h2>\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- 게시글 창 -->\r\n");
      out.write("\t<form id=\"studyForm\">\r\n");
      out.write("\t\t<input type=\"hidden\" name=\"mem_id\" value=\"");
      out.print( svo.getMem_id() );
      out.write("\">\r\n");
      out.write("\t            \r\n");
      out.write("\t\t<table class=\"table\">\r\n");
      out.write("\t\t\t<thead>\r\n");
      out.write("\t\t\t\t<tr class=\"table-info\">\r\n");
      out.write("\t\t\t\t\t<th colspan=\"3\" id=\"title\">[");
      out.print( svo.getSb_sort() );
      out.write(']');
      out.write(' ');
      out.print( svo.getSb_title() );
      out.write("</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</thead>\r\n");
      out.write("\r\n");
      out.write("\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td id=\"writer\">");
      out.print( svo.getSb_writer() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t<td></td>\r\n");
      out.write("\t\t\t\t\t<td id=\"date\">");
      out.print( svo.getSb_date() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t  \t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td id=\"cont\" colspan=\"3\">");
      out.print( svo.getSb_cont() );
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<br><br>\r\n");
      out.write("\t\t\t\t");

					String strDisable = "";
					for(StudyApplyVO rivo : studentVo){
						if(rivo.getMem_id().equals(loginMember.getMem_id())){
							strDisable = "disabled";
						}
					}
					if(loginMember != null && !loginMember.getMem_sort_nm().equals("교수")) {
				
      out.write("\t\r\n");
      out.write("\t\t\t\t\t\t<button type=\"button\"  id=\"apply\" ");
      out.print( strDisable );
      out.write(" class=\"btn\">\r\n");
      out.write("\t\t\t\t\t\t신청하기 <img id=\"but-icon\" src=\"");
      out.print(request.getContextPath());
      out.write("/images/icon/신청하기.PNG\">\r\n");
      out.write("\t\t\t\t\t\t</button>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" id=\"sb_num\" name=\"sb_num\" value=\"");
      out.print( svo.getSb_num() );
      out.write("\">\r\n");
      out.write("\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"3\">\r\n");
      out.write("\t\t\t\t\t");
 if(loginMember != null && loginMember.getMem_id().equals(svo.getMem_id()) || loginMember.getMem_sort_nm().equals("교수")) { 
      out.write("\r\n");
      out.write("\t\t\t\t  \t\t<!-- 로그인한 사람이랑 일치할때만 뜨도록 수정 -->\r\n");
      out.write("\t\t\t\t  \t\t<input type=\"button\" value=\"수정\" id=\"updateStudy\" class=\"btn btn-dark\">\r\n");
      out.write("\t\t\t\t  \t\t<input type=\"button\" value=\"삭제\" id=\"deleteStudy\" class=\"btn btn-dark\">\r\n");
      out.write("\t\t\t\t  \t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</tbody>\r\n");
      out.write("  \t\t</table>\r\n");
      out.write("  \t</form>\r\n");
      out.write("  \t</div>\r\n");
      out.write("  \t\r\n");
      out.write("  \t<!-- 예약 리스트 -->\r\n");
      out.write("  \t<div class=\"container\">\r\n");
      out.write("  \t<form id=\"studyApplyForm\">\r\n");
      out.write("  \t<table class=\"table\">\r\n");
      out.write("  \t\t<thead>\r\n");
      out.write("\t\t\t<tr class=\"table-info\">\r\n");
      out.write("\t\t\t\t<th colspan=\"4\">예약 현황</th>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</thead>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<tbody>\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td id=\"total\" colspan=\"2\">모집 인원 : ");
      out.print( svo.getTotal_cnt() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td id=\"current\" colspan=\"2\">현재 인원 : ");
      out.print( svo.getCurrent_cnt() );
      out.write("</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t");

				for(StudyApplyVO rivo : studentVo){
			
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td id=\"name\">");
      out.print( rivo.getMem_name() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td id=\"gender\">");
      out.print( rivo.getMem_gender() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td class=\"dep\" value=\"");
      out.print( rivo.getMem_id() );
      out.write('"');
      out.write('>');
      out.print( rivo.getMem_id() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t");
 if(loginMember != null && loginMember.getMem_id().equals(rivo.getMem_id()) || loginMember.getMem_sort_nm().equals("교수")) { 
      out.write("\r\n");
      out.write("\t\t\t\t\t<!-- 로그인 한 사람만 뜨게 -->\r\n");
      out.write("\t\t\t\t\t<input type=\"button\" value=\"취소\" class=\"cancelApply\" class=\"btn btn-dark\">\r\n");
      out.write("\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>\r\n");
      out.write("\t\t</tbody>\r\n");
      out.write("\t\t");

			}
		
      out.write("\r\n");
      out.write("  \t</table>\r\n");
      out.write("  \t<hr>\r\n");
      out.write("\t\t<!-- 목록 -->\r\n");
      out.write("\t\t<button type=\"button\" id=\"studyList\" class=\"btn\">\r\n");
      out.write("\t\t\t<img src=\"");
      out.print(request.getContextPath());
      out.write("/images/icon/목록아이콘.PNG\">\r\n");
      out.write("\t\t</button>\r\n");
      out.write("  \t</form>\r\n");
      out.write("  \t</div>\r\n");
      out.write("  \t\r\n");
      out.write("  \t<!-- 스터디 신청창 -->\r\n");
      out.write("\t<div class=\"modal fade\" id=\"insertModal\">\r\n");
      out.write("\t\r\n");
      out.write("\t\t<div class=\"modal-dialog modal-dialog-centered\">\r\n");
      out.write("\t\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\t<!-- Modal Header -->\r\n");
      out.write("\t\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t<h4 class=\"modal-title\">스터디 신청</h4>\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<form id=\"wrform\" onsubmit=\"resturn false;\">\r\n");
      out.write("\t\t\t\t<!-- Modal body -->\r\n");
      out.write("\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t\t\t<label>이름 : ");
      out.print( loginMember.getMem_name() );
      out.write("</label><br>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" name=\"mem_name\" value=\"");
      out.print( loginMember.getMem_name() );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<label>성별 : ");
      out.print( loginMember.getMem_gender() );
      out.write("</label><br>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" name=\"mem_gender\" value=\"");
      out.print( loginMember.getMem_gender() );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<label>학번 : ");
      out.print( loginMember.getMem_id() );
      out.write("</label><br>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" name=\"mem_id\" value=\"");
      out.print( loginMember.getMem_id() );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" name=\"sb_num\" class=\"hiddensb\">\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<!-- Modal footer -->\r\n");
      out.write("\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t<button type=\"submit\" class=\"btn btn-danger\" id=\"applyStudy\">확인</button>\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">취소</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<!-- 스터디 취소창 -->\r\n");
      out.write("\t<div class=\"modal fade\" id=\"cancelModal\">\r\n");
      out.write("\t\t<div class=\"modal-dialog modal-dialog-centered\">\r\n");
      out.write("\t\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<form id=\"delform\">\r\n");
      out.write("\t\t\t\t<!-- Modal Header -->\r\n");
      out.write("\t\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<!-- Modal body -->\r\n");
      out.write("\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t<label>정말 취소하시겠습니까?</label>\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" name=\"sb_num\" value=\"");
      out.print( svo.getSb_num() );
      out.write("\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"hidden\" name=\"mem_id\" class=\"hiddenid\">\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<!-- Modal footer -->\r\n");
      out.write("\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"btn btn-danger\" id=\"cancelStudy\">예약 취소</button>\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">취소</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</form>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("  \t\r\n");
      out.write("  \t<!-- 게시글 삭제창 -->\r\n");
      out.write("\t<div class=\"modal fade\" id=\"deleteModal\">\r\n");
      out.write("\t\t<div class=\"modal-dialog modal-dialog-centered\">\r\n");
      out.write("\t\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\r\n");
      out.write("\t\t\t\t<!-- Modal Header -->\r\n");
      out.write("\t\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<!-- Modal body -->\r\n");
      out.write("\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t\t<form id=\"formdel\">\r\n");
      out.write("\t\t\t\t\t\t<label>정말 삭제하시겠습니까?</label>\r\n");
      out.write("\t\t\t\t\t</form>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t<!-- Modal footer -->\r\n");
      out.write("\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"btn btn-danger\" id=\"del\">삭제</button>\r\n");
      out.write("\t\t\t\t\t<button type=\"button\" class=\"btn btn-danger\" data-dismiss=\"modal\">취소</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
