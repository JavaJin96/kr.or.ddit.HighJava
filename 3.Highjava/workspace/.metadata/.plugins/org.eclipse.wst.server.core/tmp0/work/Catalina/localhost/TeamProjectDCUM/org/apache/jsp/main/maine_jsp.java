/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2022-02-15 09:02:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.main;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import kr.or.ddit.dcum.vo.temp_StudentInfoVO;
import kr.or.ddit.dcum.vo.StudentVO;
import kr.or.ddit.dcum.vo.MemberVO;

public final class maine_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("kr.or.ddit.dcum.vo.temp_StudentInfoVO");
    _jspx_imports_classes.add("kr.or.ddit.dcum.vo.StudentVO");
    _jspx_imports_classes.add("kr.or.ddit.dcum.vo.MemberVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>ddit cyber university</title>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../css/main.css\">\r\n");
      out.write("<!-- jquery -->\r\n");
      out.write("<script src=\"../js/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css\">\r\n");
      out.write("<!-- <script src=\"https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js\"></script> -->\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("<script>\r\n");
      out.write("$(function(){\r\n");
      out.write("\t$('a').on('click',function(){\r\n");
      out.write("\t\ttarget= $(this).attr('class')\r\n");
      out.write("// \t\talert(target)  //검사용alert - 지울예정\r\n");
      out.write("\t\t$('#side-frame').attr('src',\"");
      out.print(request.getContextPath());
      out.write("/work_kmk/side_bar/\"+target+\".jsp\")\r\n");
      out.write("\t});\r\n");
      out.write("});\r\n");
      out.write("\r\n");
      out.write("</script>\t\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
 
MemberVO loginMember = (MemberVO)session.getAttribute("loginUser");
temp_StudentInfoVO studentInfo = (temp_StudentInfoVO)session.getAttribute("studentInfo");

      out.write("\r\n");
      out.write("<!-- 팝업창 -->\r\n");
if (loginMember.getMem_pass().equals(loginMember.getMem_bir())) {
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("\t$('.modal fade').ready(function() {\r\n");
      out.write("\t\t$(\"#myModal\").modal(\"show\");\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 비밀번호 규칙 정규식 : 6~20 영문 대소문자  , 최소 1개의 숫자 혹은 특수 문자를 포함해야 함\r\n");
      out.write("\t\tpassreg =/^(?=.*[a-zA-Z])((?=.*\\d)|(?=.*\\W)).{6,20}$/\r\n");
      out.write("\t\tpassvalue =\"\"\r\n");
      out.write("\t\tchkpassvalue =\"\"\r\n");
      out.write("\t\t$('#newPass').on('keyup',function(){\r\n");
      out.write("\t\t\tpassvalue = $(this).val().trim();\r\n");
      out.write("\t\t\tif(passreg.test(passvalue)) {\r\n");
      out.write("\t\t\t\t$(this).css('border', '2px solid green');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t$('#chkPass').on('keyup',function(){\r\n");
      out.write("\t\t\tchkpassvalue = $(this).val().trim();\r\n");
      out.write("\t\t\tif(passreg.test(passvalue)) {\r\n");
      out.write("\t\t\t\t$(this).css('border', '2px solid green');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t$('#modal-but').on('click', function() {\r\n");
      out.write("\t\t\tif(passvalue.length < 1 ){\r\n");
      out.write("\t\t\t\talert(\"비밀번호를 입력해주세요.\")\r\n");
      out.write("\t\t\t\t$('#newPass').css('border', '2px solid red');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse if(!passreg.test(passvalue)) {\r\n");
      out.write("\t\t\t\talert(\"비밀번호가 올바르지 않습니다.\\n영문 대소문자(최소 1개의 숫자 혹은 특수문자 포함) 6자리 이상으로\\n만들어야합니다.\")\r\n");
      out.write("\t\t\t\t$('#newPass').css('border', '2px solid red');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse if(chkpassvalue< 1 ){\r\n");
      out.write("\t\t\t\talert(\"비밀번호를 재입력해주세요.\")\r\n");
      out.write("\t\t\t\t$('#chkPass').css('border', '2px solid red');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse if(chkpassvalue != passvalue) {\r\n");
      out.write("\t\t\t\talert(\"비밀번호가 일치하지 않습니다.\")\r\n");
      out.write("\t\t\t\t$('#chkPass').css('border', '2px solid red');\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\telse{\r\n");
      out.write("\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\turl : \"");
      out.print(request.getContextPath());
      out.write("/updatePass.do\",\r\n");
      out.write("\t\t\t\t\tdata : { 'mem_pass': passvalue },\r\n");
      out.write("\t\t\t\t\ttype : 'post',\r\n");
      out.write("\t\t\t\t\tsuccess : function() {\r\n");
      out.write("\t\t\t\t\t\talert(\"변경성공\");\r\n");
      out.write("\t\t\t\t\t\t$('.form-control').val(\"\");\r\n");
      out.write("\t\t\t\t\t\t$(\"#myModal\").modal(\"hide\");\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\terror : function(xhr) {\r\n");
      out.write("\t\t\t\t\t\talert(\"상태 : \" + xhr.status);\r\n");
      out.write("\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\tdataType : 'html'\r\n");
      out.write("\t\t\t\t})\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t})\r\n");
      out.write("\t \t\r\n");
      out.write("\t})\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- The Modal -->\r\n");
      out.write("\t<div class=\"modal fade\" id=\"myModal\" >\r\n");
      out.write("\t\t<div class=\"modal-dialog modal-dialog-centered\">\r\n");
      out.write("\t\t\t<div class=\"modal-content\">\r\n");
      out.write("\t\t\t\t<!-- Modal Header -->\r\n");
      out.write("\t\t\t\t<div class=\"modal-header\">\r\n");
      out.write("\t\t\t\t\t<h4 class=\"modal-title\">초기 비밀번호를 변경해주세요🔒</h4>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!-- Modal body -->\r\n");
      out.write("\t\t\t\t<div class=\"modal-body\">\r\n");
      out.write("\t\t\t\t\t<div id=\"div1\" class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"pwd\">변경할 비밀번호 입력</label> \r\n");
      out.write("\t\t\t\t\t\t<input type=\"password\" class=\"form-control\" id=\"newPass\" \r\n");
      out.write("\t\t\t\t\t\tplaceholder=\"영문 대소문자 6자리 (최소 1개의 숫자 혹은 특수문자 포함)\" name=\"mem_pass\" required>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t\t<div id=\"div2\" class=\"form-group\">\r\n");
      out.write("\t\t\t\t\t\t<label for=\"pwd\">변경할 비밀번호 재입력</label> \r\n");
      out.write("\t\t\t\t\t\t<input type=\"password\"\tclass=\"form-control\" id=\"chkPass\" \r\n");
      out.write("\t\t\t\t\t\tplaceholder=\"Enter password\" required>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!-- Modal footer -->\r\n");
      out.write("\t\t\t\t<div class=\"modal-footer\">\r\n");
      out.write("\t\t\t\t\t<button type=\"submit\" class=\"btn btn-secondary btn-lg btn-block\" id=\"modal-but\" >확인</button>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
}
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 메인 비디오 이미지 -->\r\n");
      out.write("\t<video class=\"bg-video\" playsinline=\"playsinline\" autoplay=\"autoplay\"\r\n");
      out.write("\t\tmuted=\"muted\" loop=\"loop\">\r\n");
      out.write("\t\t<source src=\"assets/mp4/bg.mp4\" type=\"video/mp4\" />\r\n");
      out.write("\t</video>\r\n");
      out.write("\r\n");
      out.write("\t<!-- 학생메뉴 -->\r\n");
      out.write("\t<button type=\"button\" class=\"btn btn-primary btn-dark\"\r\n");
      out.write("          onclick='window.top.location.href=\"");
      out.print(request.getContextPath());
      out.write("/logout.do\"'>로그아웃</button>\r\n");
      out.write("\t<nav class=\"clearfix\" id=\"top-nav\">\r\n");
      out.write("\t\t<a id=\"imgAtag\" href=\"./main.jsp\"><img alt=\"로고.png\" src=\"../images/main/로고2.png\"></a>\r\n");
      out.write("\t\t<ul>\r\n");
      out.write("\t\t\t<li>\r\n");
      out.write("\t\t\t\t<div class=\"dropdown\">\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/work_kmk/mypage/updateInfo.jsp\" \r\n");
      out.write("\t\t\t\t\t   class=\"mypage\" target=\"ifr-main\">\r\n");
      out.write("\t\t\t\t\t\t마이페이지\r\n");
      out.write("\t\t\t\t\t</a>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<div class=\"dropdown-content\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/work_kmk/mypage/updateInfo.jsp\" target=\"ifr-main\" class=\"mypage\">개인정보 수정</a>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"#\"target=\"ifr-main\" class=\"mypage\">게시글관리</a>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/work_kmk/mypage/reservation.jsp\"target=\"ifr-main\" class=\"mypage\">시설물 예약</a>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/allRentList.do\" target=\"ifr-main\" class=\"mypage\">시설물 예약현황</a>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<li>\r\n");
      out.write("\t\t\t\t<div class=\"dropdown\">\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/work_ysh/student.jsp\" target=\"ifr-main\" class=\"hacsa\">학사관리</a>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<div class=\"dropdown-content\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"#\" class=\"hacsa\">학사신청 안내</a>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/work_ysh/SelectScore.jsp\" target=\"ifr-main\" class=\"hacsa\">성적관리</a>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/work_ysh/SubjectSelect.jsp\" target=\"ifr-main\" class=\"hacsa\">수강관리</a>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"#\" target=\"ifr-main\" class=\"hacsa\">장학관리</a>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"#\" target=\"ifr-main\" class=\"hacsa\">졸업관리</a>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/allProfessorList.do\" \r\n");
      out.write("\t\t\t\t\ttarget=\"ifr-main\" class=\"hacsa\">휴/복학/자퇴</a>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<li>\r\n");
      out.write("\t\t\t\t<div class=\"dropdown\">\r\n");
      out.write("\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/work_psj/myclass/index.jsp\" target=\"ifr-main\" class=\"class\">강의실</a>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<div class=\"dropdown-content\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/work_psj/myclass/curmyclass.jsp\" target=\"ifr-main\" class=\"class\">수강중인 강의</a>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/work_psj/qnaboard/index.jsp\" target=\"ifr-main\" class=\"class\">질문</a>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/work_psj/classComent/index.jsp\" target=\"ifr-main\" class=\"class\">강의 평가</a>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/work_psj/notice/index.jsp\" target=\"ifr-main\" class=\"class\">강의공지사항</a>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/work_psj/homework/index.jsp\" target=\"ifr-main\" class=\"class\">과제</a>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/work_psj/Test/indexs.jsp\" target=\"ifr-main\" class=\"class\">시험</a>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</li>\t\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<li>\r\n");
      out.write("\t\t\t\t<div class=\"dropdown\">\r\n");
      out.write("\t\t\t\t\t<a href=\"#\" class=\"board\">커뮤니티</a>\r\n");
      out.write("\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<div class=\"dropdown-content\">\r\n");
      out.write("\t\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/bamboo.do\" target=\"ifr-main\"class=\"board\">대나무숲</a>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"");
      out.print(request.getContextPath());
      out.write("/gongji.do\" target=\"ifr-main\"class=\"board\">공지사항</a>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"#\"class=\"board\">질의응답</a>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"#\"class=\"board\">비교과 수강신청</a>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"#\"class=\"board\">스터디</a>\r\n");
      out.write("\t\t\t\t\t\t<a href=\"#\"class=\"board\">물물교환</a>\r\n");
      out.write("\t\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</li>\r\n");
      out.write("\t\t</ul>\t\r\n");
      out.write("\t</nav>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<div class=\"main\" style=\"margin-top:1px\">\r\n");
      out.write("\t<aside>\r\n");
      out.write("\t\t<iframe name=\"ifr-aside\" id=\"side-frame\" src=\"../work_kmk/iframe_kmk/card.jsp\"></iframe>\r\n");
      out.write("\t</aside>\r\n");
      out.write("\r\n");
      out.write("\t<section style=\"float:rigth\">\r\n");
      out.write("\t\t<iframe name=\"ifr-main\" id=\"main-frame\" src=\"../work_kmk/iframe_kmk/slider.jsp\"></iframe>\r\n");
      out.write("\t</section>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("\t<!-- footer -->\r\n");
      out.write("\t<footer style=\"margin-bottom:0\">\r\n");
      out.write("\t\t<p>Copyright (c)2021 Kang<p>\r\n");
      out.write("\t</footer>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
