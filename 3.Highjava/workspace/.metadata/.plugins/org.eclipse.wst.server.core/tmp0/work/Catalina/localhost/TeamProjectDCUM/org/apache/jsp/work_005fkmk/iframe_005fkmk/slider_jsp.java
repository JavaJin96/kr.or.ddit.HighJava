/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2022-02-16 01:47:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.work_005fkmk.iframe_005fkmk;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class slider_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<!-- 카드 -->\r\n");
      out.write("<link rel=\"stylesheet\" href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css\">\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/jquery@3.5.1/dist/jquery.slim.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("/*---------------------- 슬라이드 ----------------------------*/\r\n");
      out.write(".slider{\r\n");
      out.write("    width: 1040px;\r\n");
      out.write("    height: 390px;\r\n");
      out.write("    position: relative;\r\n");
      out.write("    margin: 3% auto;\r\n");
      out.write("    overflow: hidden; /* 현재 슬라이드 오른쪽에 위치한 나머지 슬라이드 들이 보이지 않도록 가림 */\r\n");
      out.write("/*     text-align: center; */\r\n");
      out.write("\tdisplay: flex;\r\n");
      out.write("}\r\n");
      out.write(".slider input[type=radio]{\r\n");
      out.write("    display: none;\r\n");
      out.write("}\r\n");
      out.write("img{\r\n");
      out.write("\twidth : 1040px;\r\n");
      out.write("\theight : 390px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("ul.imgs{\r\n");
      out.write("    padding: 0;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("    list-style: none;    \r\n");
      out.write("}\r\n");
      out.write("ul.imgs li{\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    left: 640px;\r\n");
      out.write("    transition-delay: 1s; /* 새 슬라이드가 이동해 오는 동안 이전 슬라이드 이미지가 배경이 보이도록 지연 */\r\n");
      out.write("    padding: 0;\r\n");
      out.write("    margin: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".bullets{\r\n");
      out.write("    position: absolute;\r\n");
      out.write("    left: 50%;\r\n");
      out.write("    transform: translateX(-50%);\r\n");
      out.write("    bottom: -6px;\r\n");
      out.write("    z-index: 2;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".bullets label{\r\n");
      out.write("    display: inline-block;\r\n");
      out.write("    border-radius: 50%;\r\n");
      out.write("    background-color: rgba(0,0,0,0.55);\r\n");
      out.write("    width: 20px;\r\n");
      out.write("    height: 20px;\r\n");
      out.write("    cursor: pointer;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("/* 현재 선택된 불릿 배경 흰색으로 구분 표시 */\r\n");
      out.write(".slider input[type=radio]:nth-child(1):checked~.bullets>label:nth-child(1){\r\n");
      out.write("    background-color: orange;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".slider input[type=radio]:nth-child(2):checked~.bullets>label:nth-child(2){\r\n");
      out.write("    background-color: orange;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".slider input[type=radio]:nth-child(3):checked~.bullets>label:nth-child(3){\r\n");
      out.write("    background-color: orange;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(".slider input[type=radio]:nth-child(4):checked~.bullets>label:nth-child(4){\r\n");
      out.write("    background-color: orange;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write(" .slider input[type=radio]:nth-child(1):checked~ul.imgs>li:nth-child(1){ \r\n");
      out.write("     left: 0; \r\n");
      out.write("     transition: 0.5s; \r\n");
      out.write("     z-index:1; \r\n");
      out.write(" } \r\n");
      out.write("\r\n");
      out.write(" .slider input[type=radio]:nth-child(2):checked~ul.imgs>li:nth-child(2){ \r\n");
      out.write("     left: 0; \r\n");
      out.write("     transition: 0.5s; \r\n");
      out.write("     z-index:1; \r\n");
      out.write(" } \r\n");
      out.write("\r\n");
      out.write(" .slider input[type=radio]:nth-child(3):checked~ul.imgs>li:nth-child(3){ \r\n");
      out.write("     left: 0; \r\n");
      out.write("     transition: 0.5s; \r\n");
      out.write("     z-index:1; \r\n");
      out.write(" } \r\n");
      out.write("\r\n");
      out.write(" .slider input[type=radio]:nth-child(4):checked~ul.imgs>li:nth-child(4){ \r\n");
      out.write("     left: 0; \r\n");
      out.write("     transition: 0.5s; \r\n");
      out.write("     z-index:1; \r\n");
      out.write(" } \r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<div class=\"slider\" targer=\"ifr\">\r\n");
      out.write("\t    <input type=\"radio\" name=\"slide\" id=\"slide1\" checked>\r\n");
      out.write("\t    <input type=\"radio\" name=\"slide\" id=\"slide2\">\r\n");
      out.write("\t    <input type=\"radio\" name=\"slide\" id=\"slide3\">\r\n");
      out.write("\t    <input type=\"radio\" name=\"slide\" id=\"slide4\">\r\n");
      out.write("\t    \r\n");
      out.write("\t    <ul id=\"imgholder\" class=\"imgs\">\r\n");
      out.write("\t        <li><img src=\"../../images/main/학생.jpg\"  targer=\"ifr\"></li>\r\n");
      out.write("\t        <li><img src=\"../../images/main/학생2.jpg\" targer=\"ifr\"></li>\r\n");
      out.write("\t        <li><img src=\"../../images/main/학생3.jpg\" targer=\"ifr\"></li>\r\n");
      out.write("\t        <li><img src=\"../../images/main/학생4.jpg\" targer=\"ifr\" ></li>\r\n");
      out.write("\t    </ul>\r\n");
      out.write("\t    \r\n");
      out.write("\t    <div class=\"bullets\">\r\n");
      out.write("\t        <label for=\"slide1\">&nbsp;</label>\r\n");
      out.write("\t        <label for=\"slide2\">&nbsp;</label>\r\n");
      out.write("\t        <label for=\"slide3\">&nbsp;</label>\r\n");
      out.write("\t        <label for=\"slide4\">&nbsp;</label>\r\n");
      out.write("\t    </div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
