/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2022-02-17 08:33:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.work_005fkmk.system;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.List;
import kr.or.ddit.dcum.vo.temp_StudentInfoVO;
import kr.or.ddit.dcum.vo.MemberVO;

public final class updateMember_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("kr.or.ddit.dcum.vo.temp_StudentInfoVO");
    _jspx_imports_classes.add("java.util.List");
    _jspx_imports_classes.add("kr.or.ddit.dcum.vo.MemberVO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<script src=\"");
      out.print(request.getContextPath());
      out.write("/js/jquery-3.6.0.min.js\"></script>\r\n");
      out.write("<!-- Core theme CSS (includes Bootstrap) -->\r\n");
      out.write("<link href=\"css/styles.css\" rel=\"stylesheet\" />\r\n");
      out.write("<link rel=\"stylesheet\"\r\n");
      out.write("\thref=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/css/bootstrap.min.css\">\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js\"></script>\r\n");
      out.write("<script\r\n");
      out.write("\tsrc=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.1/dist/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("<style>\r\n");
      out.write("table,tr,th,td{\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script>\r\n");
      out.write("$(function(){\r\n");
      out.write("\t$('.btn').on('click',function(){\r\n");
      out.write("\t\tmem_name= $('#mem_name').text()\r\n");
      out.write("\t\tconsole.log(\"ajax시작\")\r\n");
      out.write("\t\t$.ajax({\r\n");
      out.write("\t\t\turl : '");
      out.print(request.getContextPath());
      out.write("/updateStatusByProfessor.do',\r\n");
      out.write("\t\t\tdata : {\r\n");
      out.write("\t\t\t\t\"result\": $(this).val(),\r\n");
      out.write("\t\t\t\t\"student_id\": $('#mem_id').text(),\r\n");
      out.write("\t\t\t\t\"status\":$('#status').text()\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\ttype :'post',\r\n");
      out.write("\t\t\tsuccess : function(res){\r\n");
      out.write("\t\t\t\talert(mem_name+\"님 \"+res)\r\n");
      out.write("\t\t\t\tlocation.href='");
      out.print(request.getContextPath());
      out.write("/statusChangeList.do'\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\terror : function(xhr){\r\n");
      out.write("\t\t\t\talert(\"오류....ㅠㅠ\"+xhr.status)\t\r\n");
      out.write("\t\t\t},\r\n");
      out.write("\t\t\tdataType : 'json'\r\n");
      out.write("\t\t})\r\n");
      out.write("\t})\r\n");
      out.write("})\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
 
MemberVO loginMember = (MemberVO)session.getAttribute("loginUser");
String dep_name = (String)session.getAttribute("dep_name");
List<temp_StudentInfoVO> waitList = (List<temp_StudentInfoVO>)request.getAttribute("waitList");
List<temp_StudentInfoVO> totalList = (List<temp_StudentInfoVO>)request.getAttribute("totalList");

      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("<br>\r\n");
      out.write("\t<div class=\"container\">\r\n");
      out.write("\t\t<h3>학생관리</h3>\r\n");
      out.write("\t\t<hr>\r\n");
      out.write("\r\n");
      out.write("\t\t<div id=\"div1\">\r\n");
      out.write("\t\t\t<table class=\"table\">\r\n");
      out.write("\t\t\t\t<thead class=\"thead-dark\">\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th colspan=\"6\" style=\"text-align: left;\">휴/복학/자퇴 신청현황</th>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</thead>\r\n");
      out.write("\t\t\t\t<thead class=\"thead-light\">\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<th>순번</th>\r\n");
      out.write("\t\t\t\t\t\t<th>이름</th>\r\n");
      out.write("\t\t\t\t\t\t<th>학과</th>\r\n");
      out.write("\t\t\t\t\t\t<th>학번</th>\r\n");
      out.write("\t\t\t\t\t\t<th>진행상태</th>\r\n");
      out.write("\t\t\t\t\t\t<th>승인</th>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</thead>\r\n");
if(waitList!=null){
	for(int i = 0 ; i < waitList.size() ; i++){
	if(waitList.get(i).getStatus().length()>2){
      out.write("\r\n");
      out.write("\t\t\t\t<tbody>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(i+1);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td id=\"mem_name\">");
      out.print(waitList.get(i).getMem_name() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td id=\"dep_name\">");
      out.print(dep_name);
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td id=\"mem_id\">");
      out.print(waitList.get(i).getMem_id() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td id=\"status\">");
      out.print(waitList.get(i).getStatus() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"button\" class=\"btn btn-warning btn-sm ok-but\" value=\"승인\">\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"button\" class=\"btn btn-danger btn-sm no-but\" value=\"반려\">\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
}}}else{ 
      out.write("\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>신청내역이 없습니다.</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
}
      out.write("\r\n");
      out.write("\t\t\t\t</tbody>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
